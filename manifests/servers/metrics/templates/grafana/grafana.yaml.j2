apiVersion: v1
kind: Service
metadata:
  name: kube-insight-grafana
  namespace: {{ vars['namespace'] }}
  labels:
    kubernetes.io/cluster-service: "true"
    task: "kube-insight-grafana"
    kubernetes.io/name: "kube-insight-grafana"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    k8s-app: kube-insight-grafana

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-insight-grafana
  namespace: {{ vars['namespace'] }}
  labels:
    k8s-app: "kube-insight-grafana"
    kubernetes.io/cluster-service: "true"
    version: "{{ vars['grafana']['version'] }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kube-insight-grafana
      version: {{ vars['grafana']['version'] }}
  template:
    metadata:
      labels:
        task: "kube-insight-grafana"
        k8s-app: "kube-insight-grafana"
        version: "{{ vars['grafana']['version'] }}"
    spec:
      containers:
      - name: kube-insight-grafana
        image: {{ vars['grafana']['image'] }}:{{ vars['grafana']['version'] }}
        imagePullPolicy: {{ vars['grafana']['pullPolicy'] }}
        command: [ "/bin/sh" ]
        args:
        - -c
        - grafana-cli plugins install grafana-kairosdb-datasource && /run.sh
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "{{ vars['grafana']['adminPassword'] }}"
        ports:
        - name: http
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /login
            port: 3000
            scheme: HTTP
        resources:
          limits:
            cpu: {{ vars['grafana']['cpuLimitMilliCores'] }}m
            memory: {{ vars['grafana']['memLimitMB'] }}Mi
          requests:
            cpu: {{ vars['grafana']['cpuRequestMilliCores'] }}m
            memory: {{ vars['grafana']['memRequestMB'] }}Mi
      tolerations:
      # allow scheduling onto master
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
